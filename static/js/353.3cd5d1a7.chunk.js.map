{"version":3,"file":"static/js/353.3cd5d1a7.chunk.js","mappings":"+JACA,SAAgB,YAAc,8BAA8B,aAAe,+BAA+B,WAAa,6BAA6B,SAAW,2BAA2B,QAAU,0BAA0B,SAAW,2BAA2B,OAAS,0B,uBCE7Q,MAcA,EAdqBA,IACnB,MAAMC,EAAO,aAAaD,EAAME,KAChC,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGC,EAAMC,SAASC,UAChCJ,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CACNC,GAAIR,EACJG,UAAWM,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAMC,EAAWN,EAAMO,WAAa,EAAE,EAAEL,SAE/DP,EAAMa,QAEL,ECFV,EATsBb,IAElBc,EAAAA,EAAAA,MAAA,OAAKV,UAAW,GAAGC,EAAMU,UAAUR,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,OAAKa,IAAK,GAAGhB,EAAMiB,SAASC,QAASC,IAAI,QACxCnB,EAAMiB,SAASF,W,4CCKtB,MAAMK,GAAcC,EAAAA,EAAAA,GAA2B,IA6CzCC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,cAAlBD,EAnBJvB,IAEpBc,EAAAA,EAAAA,MAAA,QAAMW,SAAUzB,EAAM0B,aAAanB,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACJvB,UAAWC,EAAMuB,SACjBC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUZ,GACrBP,KAAK,iBACLoB,YAAY,kCAGhB9B,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAM6B,OAAO3B,SAAC,wBAQzC,EA7CkBP,IAChB,MAAMmC,EAAenC,EAAMoC,YAAYC,KAAKC,IAC1CnC,EAAAA,EAAAA,KAACoC,EAAW,CAAYrC,GAAIoC,EAAEpC,GAAIW,KAAMyB,EAAEzB,MAAxByB,EAAEpC,MAGhBsC,EAAgBxC,EAAMyC,aAAaJ,KAAKK,IAC5CvC,EAAAA,EAAAA,KAACwC,EAAY,CAAsB1B,SAAUyB,GAA1BA,EAAYxC,MAOjC,OACEY,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAMuC,YAAYrC,SAAA,EAChCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAM8B,aAAa5B,SAAE4B,KACrCrB,EAAAA,EAAAA,MAAA,OAAAP,SAAA,EACEJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAMwC,SAAStC,SAAEiC,KACjCrC,EAAAA,EAAAA,KAACmB,EAAmB,CAACG,SATNqB,IACnB9C,EAAM+C,YAAYD,EAAOE,eAAe,SAUlC,E,kCC3BV,MAiBA,GAAeC,E,QAAAA,IACbC,EAAAA,GACAC,EAAAA,EAAAA,KAnBuBC,IAChB,CACLhB,YAAagB,EAAMC,aAAajB,YAChCK,aAAcW,EAAMC,aAAaZ,aACjCO,eAAgBI,EAAMC,aAAaL,mBAIXM,IACnB,CACLP,YAAcC,IACZ,MAAMO,GAASC,EAAAA,EAAAA,GAAyBR,GACxCM,EAASC,EAAO,MAKtB,CAGEE,E,mECvBF,MAAMC,EAA8BN,IAAK,CACvCO,OAAQP,EAAMQ,KAAKD,SAGRT,EAAoBW,IASIV,EAAAA,EAAAA,IAAQO,EAARP,EARRnD,GACpBA,EAAM2D,QAIJxD,EAAAA,EAAAA,KAAC0D,EAAS,IAAK7D,KAHbG,EAAAA,EAAAA,KAAC2D,EAAAA,GAAQ,CAACrD,GAAG,Y","sources":["webpack://react-first-project/./src/components/Messages/Messages.module.css?8e7e","components/Messages/DialogsItem/DialogsItem.jsx","components/Messages/MessagesItem/MessagesItem.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainContent\":\"Messages_mainContent__Okdyr\",\"dialogsItems\":\"Messages_dialogsItems__y80lo\",\"activeLink\":\"Messages_activeLink__ObOLR\",\"messages\":\"Messages_messages__8s+pC\",\"message\":\"Messages_message__O19dD\",\"textarea\":\"Messages_textarea__92Mzj\",\"button\":\"Messages_button__ccvvi\"};","import style from \"../Messages.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogsItem = (props) => {\n  const path = `/messages/${props.id}`;\n  return (\n    <div className={`${style.dialog}`}>\n      <NavLink\n        to={path}\n        className={({ isActive }) => (isActive ? style.activeLink : \"\")}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogsItem;\n","import style from \"../Messages.module.css\";\n\nconst MessagesItem = (props) => {\n  return (\n    <div className={`${style.message}`}>\n      <img src={`${props.itemData.image}`} alt=\"ava\" />\n      {props.itemData.message}\n    </div>\n  );\n};\n\nexport default MessagesItem;\n","import React from \"react\";\nimport style from \"./Messages.module.css\";\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport MessagesItem from \"./MessagesItem/MessagesItem\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthValidatorCrerator,\n  requared,\n} from \"../../utils/validators.js\";\nimport { Textarea } from \"../common/FormControl/FormControl.js\";\n\nconst maxLength15 = maxLengthValidatorCrerator(15);\n\nconst Messages = (props) => {\n  const dialogsItems = props.dialogsList.map((d) => (\n    <DialogsItem key={d.id} id={d.id} name={d.name} />\n  ));\n\n  const messagesItems = props.messagesList.map((messageData) => (\n    <MessagesItem key={messageData.id} itemData={messageData} />\n  ));\n\n  const sendMessage = (values) => {\n    props.sendMessage(values.newMessageText);\n  };\n\n  return (\n    <div className={style.mainContent}>\n      <div className={style.dialogsItems}>{dialogsItems}</div>\n      <div>\n        <div className={style.messages}>{messagesItems}</div>\n        <AddMessageReduxForm onSubmit={sendMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          className={style.textarea}\n          component={Textarea}\n          validate={[requared, maxLength15]}\n          name=\"newMessageText\"\n          placeholder=\"Write your message here...\"\n        />\n      </div>\n      <div>\n        <button className={style.button}>Send message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({ form: \"addMessage\" })(AddMessageForm);\n\nexport default Messages;\n","import Messages from \"./Messages\";\nimport { sendMessageActionCreator } from \"../../redux/messages-reducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsList: state.messagesPage.dialogsList,\n    messagesList: state.messagesPage.messagesList,\n    newMessageText: state.messagesPage.newMessageText,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageText) => {\n      const action = sendMessageActionCreator(newMessageText);\n      dispatch(action);\n    },\n  };\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps),\n)(Messages);\n","import { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  const RedirectComponent = (props) => {\n    if (!props.isAuth) {\n      return <Navigate to=\"/login\" />;\n    }\n\n    return <Component {...props} />;\n  };\n\n  const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent,\n  );\n\n  return ConnectedRedirectComponent;\n};\n"],"names":["props","path","id","_jsx","className","style","dialog","children","NavLink","to","_ref","isActive","activeLink","name","_jsxs","message","src","itemData","image","alt","maxLength15","maxLengthValidatorCrerator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","textarea","component","Textarea","validate","requared","placeholder","button","dialogsItems","dialogsList","map","d","DialogsItem","messagesItems","messagesList","messageData","MessagesItem","mainContent","messages","values","sendMessage","newMessageText","compose","withAuthRedirect","connect","state","messagesPage","dispatch","action","sendMessageActionCreator","Messages","mapStateToPropsForRedirect","isAuth","auth","Component","Navigate"],"sourceRoot":""}